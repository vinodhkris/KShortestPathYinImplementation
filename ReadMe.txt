What does this code do?

This code is essentially for finding the K shortest paths between 2 nodes in a graph. It is an implementation of Yin's Algorithm which can be found in this paper : https://estudogeral.sib.uc.pt/bitstream/10316/7763/1/obra.pdf . It performs really well, and the graphs are generated by using JGraphT api. The shortest path algorithm used is Dijikstra's , which is already implemented in the jGraphT api. Currently the nodes are considered as strings, but you can add a class and have it contain all the data you need. 
 

What are the files in this project ?

The 2 files in this project are Data.java and Modifiedyin.java. Data.java is essentially a class containing the path and path length. Modifiedyin.java is the file which contains the logic and actually implements ModifiedYin algorithm.

How do I run it ?

Since it is a java project you obviously need jdk and jre to run it. Eclipse was used in the building of this project, so its better if you use eclipse. You need to use the jgraphT api which can be found at : http://jgrapht.org/ . The file you need to run is Modifiedyin.java

What are the inputs needed?

There are no inputs needed. 

You can change the 'k' and change the graph in 'Modifiedyin.java' in the method createGraph(). You cna also change the starting and the final node. 

What is the output like

The output gives you the k shortest path, depending on what k is. You can change the graph and k in the code as stated in the previous question. The k currently is 3, and a sample graph is introduced with the starting node as "1" and the final node as "5". 


Thats all I can think of. Go through the code to know more. Mail me at krishnan.vinodh@gmail.com if you have any doubts.

Have Fun!!